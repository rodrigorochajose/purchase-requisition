// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  APPROVER
}

enum RequestStatus {
  DRAFT
  SUBMITTED
  APPROVED
  REJECTED
}

model User {
  id        Int               @id @default(autoincrement())
  name      String
  email     String            @unique
  password  String
  role      Role              @default(USER)
  requests  PurchaseRequest[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model PurchaseRequest {
  id              Int               @id @default(autoincrement())
  userId          Int
  user            User              @relation(fields: [userId], references: [id])
  items           RequestItems[]
  status          String            @default("DRAFT")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  approvalHistory ApprovalHistory[]
}

model RequestItems {
  id                Int             @id @default(autoincrement())
  purchaseRequestId Int
  purchaseRequest   PurchaseRequest @relation(fields: [purchaseRequestId], references: [id])
  description       String
  quantity          Int
  price             Float
}

model ApprovalHistory {
  id                Int             @id @default(autoincrement())
  status            String
  purchaseRequestId Int
  purchaseRequest   PurchaseRequest @relation(fields: [purchaseRequestId], references: [id])
  createdAt         DateTime        @default(now())
}
